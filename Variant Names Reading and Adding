//Reading Aliases of the building to the user
void printAliasesForBuilding(const Building& building) {
    std::cout << "Aliases for " << building.getName() << ":\n";
    for (const std::string& alias : building.getAliases()) {
        std::cout << " - " << alias << '\n';
    }
}

//adding Aliases to new buildings//
void addAliasesToBuilding(Building& building) {
    std::cout << "Add aliases for " << building.getName() << ". Enter one at a time. Type 'done' when finished:\n";

    std::string alias;
    while (true) {
        std::cout << "Alias: ";
        std::getline(std::cin, alias);

        // Trim whitespace
        alias.erase(0, alias.find_first_not_of(" \t\n\r"));
        alias.erase(alias.find_last_not_of(" \t\n\r") + 1);

        if (alias == "done") break;
        if (!alias.empty()) {
            building.addAlias(alias);  // assumes addAlias() is implemented
            std::cout << "Added alias: " << alias << "\n";
        }
    }
}
